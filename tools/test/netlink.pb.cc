// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netlink.proto

#include "netlink.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace clb {
class Inet4AddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Inet4Address>
      _instance;
} _Inet4Address_default_instance_;
class Inet6AddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Inet6Address>
      _instance;
} _Inet6Address_default_instance_;
class AddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Address>
      _instance;
  const ::clb::Inet4Address* inet4_;
  const ::clb::Inet6Address* inet6_;
} _Address_default_instance_;
class VirtualServerAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VirtualServerAddress>
      _instance;
} _VirtualServerAddress_default_instance_;
class VirtualServerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VirtualServerConfig>
      _instance;
} _VirtualServerConfig_default_instance_;
class MemberAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemberAddress>
      _instance;
} _MemberAddress_default_instance_;
class MemberConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemberConfig>
      _instance;
} _MemberConfig_default_instance_;
class CreateVirtualServerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateVirtualServerRequest>
      _instance;
} _CreateVirtualServerRequest_default_instance_;
class UpdateVirtualServerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateVirtualServerRequest>
      _instance;
} _UpdateVirtualServerRequest_default_instance_;
class DeleteVirtualServerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteVirtualServerRequest>
      _instance;
} _DeleteVirtualServerRequest_default_instance_;
class AddMemberRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddMemberRequest>
      _instance;
} _AddMemberRequest_default_instance_;
class RemoveMemberRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveMemberRequest>
      _instance;
} _RemoveMemberRequest_default_instance_;
class ChangeMemberRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeMemberRequest>
      _instance;
} _ChangeMemberRequest_default_instance_;
class StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Status>
      _instance;
} _Status_default_instance_;
}  // namespace clb
namespace protobuf_netlink_2eproto {
void InitDefaultsInet4AddressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::clb::_Inet4Address_default_instance_;
    new (ptr) ::clb::Inet4Address();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::clb::Inet4Address::InitAsDefaultInstance();
}

void InitDefaultsInet4Address() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInet4AddressImpl);
}

void InitDefaultsInet6AddressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::clb::_Inet6Address_default_instance_;
    new (ptr) ::clb::Inet6Address();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::clb::Inet6Address::InitAsDefaultInstance();
}

void InitDefaultsInet6Address() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInet6AddressImpl);
}

void InitDefaultsAddressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_netlink_2eproto::InitDefaultsInet4Address();
  protobuf_netlink_2eproto::InitDefaultsInet6Address();
  {
    void* ptr = &::clb::_Address_default_instance_;
    new (ptr) ::clb::Address();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::clb::Address::InitAsDefaultInstance();
}

void InitDefaultsAddress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddressImpl);
}

void InitDefaultsVirtualServerAddressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_netlink_2eproto::InitDefaultsAddress();
  {
    void* ptr = &::clb::_VirtualServerAddress_default_instance_;
    new (ptr) ::clb::VirtualServerAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::clb::VirtualServerAddress::InitAsDefaultInstance();
}

void InitDefaultsVirtualServerAddress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVirtualServerAddressImpl);
}

void InitDefaultsVirtualServerConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::clb::_VirtualServerConfig_default_instance_;
    new (ptr) ::clb::VirtualServerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::clb::VirtualServerConfig::InitAsDefaultInstance();
}

void InitDefaultsVirtualServerConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVirtualServerConfigImpl);
}

void InitDefaultsMemberAddressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_netlink_2eproto::InitDefaultsAddress();
  {
    void* ptr = &::clb::_MemberAddress_default_instance_;
    new (ptr) ::clb::MemberAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::clb::MemberAddress::InitAsDefaultInstance();
}

void InitDefaultsMemberAddress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMemberAddressImpl);
}

void InitDefaultsMemberConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::clb::_MemberConfig_default_instance_;
    new (ptr) ::clb::MemberConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::clb::MemberConfig::InitAsDefaultInstance();
}

void InitDefaultsMemberConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMemberConfigImpl);
}

void InitDefaultsCreateVirtualServerRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_netlink_2eproto::InitDefaultsVirtualServerAddress();
  protobuf_netlink_2eproto::InitDefaultsVirtualServerConfig();
  {
    void* ptr = &::clb::_CreateVirtualServerRequest_default_instance_;
    new (ptr) ::clb::CreateVirtualServerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::clb::CreateVirtualServerRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateVirtualServerRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateVirtualServerRequestImpl);
}

void InitDefaultsUpdateVirtualServerRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_netlink_2eproto::InitDefaultsVirtualServerAddress();
  protobuf_netlink_2eproto::InitDefaultsVirtualServerConfig();
  {
    void* ptr = &::clb::_UpdateVirtualServerRequest_default_instance_;
    new (ptr) ::clb::UpdateVirtualServerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::clb::UpdateVirtualServerRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateVirtualServerRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateVirtualServerRequestImpl);
}

void InitDefaultsDeleteVirtualServerRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_netlink_2eproto::InitDefaultsVirtualServerAddress();
  {
    void* ptr = &::clb::_DeleteVirtualServerRequest_default_instance_;
    new (ptr) ::clb::DeleteVirtualServerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::clb::DeleteVirtualServerRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteVirtualServerRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteVirtualServerRequestImpl);
}

void InitDefaultsAddMemberRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_netlink_2eproto::InitDefaultsVirtualServerAddress();
  protobuf_netlink_2eproto::InitDefaultsMemberAddress();
  protobuf_netlink_2eproto::InitDefaultsMemberConfig();
  {
    void* ptr = &::clb::_AddMemberRequest_default_instance_;
    new (ptr) ::clb::AddMemberRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::clb::AddMemberRequest::InitAsDefaultInstance();
}

void InitDefaultsAddMemberRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddMemberRequestImpl);
}

void InitDefaultsRemoveMemberRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_netlink_2eproto::InitDefaultsVirtualServerAddress();
  protobuf_netlink_2eproto::InitDefaultsMemberAddress();
  {
    void* ptr = &::clb::_RemoveMemberRequest_default_instance_;
    new (ptr) ::clb::RemoveMemberRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::clb::RemoveMemberRequest::InitAsDefaultInstance();
}

void InitDefaultsRemoveMemberRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemoveMemberRequestImpl);
}

void InitDefaultsChangeMemberRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_netlink_2eproto::InitDefaultsVirtualServerAddress();
  protobuf_netlink_2eproto::InitDefaultsMemberAddress();
  protobuf_netlink_2eproto::InitDefaultsMemberConfig();
  {
    void* ptr = &::clb::_ChangeMemberRequest_default_instance_;
    new (ptr) ::clb::ChangeMemberRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::clb::ChangeMemberRequest::InitAsDefaultInstance();
}

void InitDefaultsChangeMemberRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChangeMemberRequestImpl);
}

void InitDefaultsStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::clb::_Status_default_instance_;
    new (ptr) ::clb::Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::clb::Status::InitAsDefaultInstance();
}

void InitDefaultsStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStatusImpl);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::Inet4Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::Inet4Address, addr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::Inet6Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::Inet6Address, hi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::Inet6Address, lo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::Address, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::Address, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::clb::AddressDefaultTypeInternal, inet4_),
  offsetof(::clb::AddressDefaultTypeInternal, inet6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::Address, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::VirtualServerAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::VirtualServerAddress, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::VirtualServerAddress, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::VirtualServerAddress, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::VirtualServerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::VirtualServerConfig, algorithm_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::MemberAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::MemberAddress, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::MemberAddress, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::MemberConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::MemberConfig, weight_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::CreateVirtualServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::CreateVirtualServerRequest, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::CreateVirtualServerRequest, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::UpdateVirtualServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::UpdateVirtualServerRequest, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::UpdateVirtualServerRequest, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::DeleteVirtualServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::DeleteVirtualServerRequest, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::AddMemberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::AddMemberRequest, server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::AddMemberRequest, member_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::AddMemberRequest, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::RemoveMemberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::RemoveMemberRequest, server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::RemoveMemberRequest, member_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::ChangeMemberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::ChangeMemberRequest, server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::ChangeMemberRequest, member_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::ChangeMemberRequest, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::clb::Status, code_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::clb::Inet4Address)},
  { 6, -1, sizeof(::clb::Inet6Address)},
  { 13, -1, sizeof(::clb::Address)},
  { 21, -1, sizeof(::clb::VirtualServerAddress)},
  { 29, -1, sizeof(::clb::VirtualServerConfig)},
  { 35, -1, sizeof(::clb::MemberAddress)},
  { 42, -1, sizeof(::clb::MemberConfig)},
  { 48, -1, sizeof(::clb::CreateVirtualServerRequest)},
  { 55, -1, sizeof(::clb::UpdateVirtualServerRequest)},
  { 62, -1, sizeof(::clb::DeleteVirtualServerRequest)},
  { 68, -1, sizeof(::clb::AddMemberRequest)},
  { 76, -1, sizeof(::clb::RemoveMemberRequest)},
  { 83, -1, sizeof(::clb::ChangeMemberRequest)},
  { 91, -1, sizeof(::clb::Status)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::clb::_Inet4Address_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::clb::_Inet6Address_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::clb::_Address_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::clb::_VirtualServerAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::clb::_VirtualServerConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::clb::_MemberAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::clb::_MemberConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::clb::_CreateVirtualServerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::clb::_UpdateVirtualServerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::clb::_DeleteVirtualServerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::clb::_AddMemberRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::clb::_RemoveMemberRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::clb::_ChangeMemberRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::clb::_Status_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "netlink.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rnetlink.proto\022\003clb\"\034\n\014Inet4Address\022\014\n\004"
      "addr\030\001 \001(\r\"&\n\014Inet6Address\022\n\n\002hi\030\001 \001(\004\022\n"
      "\n\002lo\030\002 \001(\004\"\\\n\007Address\022\"\n\005inet4\030\001 \001(\0132\021.c"
      "lb.Inet4AddressH\000\022\"\n\005inet6\030\002 \001(\0132\021.clb.I"
      "net6AddressH\000B\t\n\007address\"b\n\024VirtualServe"
      "rAddress\022\035\n\004type\030\001 \001(\0162\017.clb.SocketType\022"
      "\035\n\007address\030\002 \001(\0132\014.clb.Address\022\014\n\004port\030\003"
      " \001(\r\"A\n\023VirtualServerConfig\022*\n\talgorithm"
      "\030\001 \001(\0162\027.clb.BalancingAlgorithm\"<\n\rMembe"
      "rAddress\022\035\n\007address\030\001 \001(\0132\014.clb.Address\022"
      "\014\n\004port\030\002 \001(\r\"\036\n\014MemberConfig\022\016\n\006weight\030"
      "\001 \001(\002\"r\n\032CreateVirtualServerRequest\022*\n\007a"
      "ddress\030\001 \001(\0132\031.clb.VirtualServerAddress\022"
      "(\n\006config\030\002 \001(\0132\030.clb.VirtualServerConfi"
      "g\"r\n\032UpdateVirtualServerRequest\022*\n\007addre"
      "ss\030\001 \001(\0132\031.clb.VirtualServerAddress\022(\n\006c"
      "onfig\030\002 \001(\0132\030.clb.VirtualServerConfig\"H\n"
      "\032DeleteVirtualServerRequest\022*\n\007address\030\001"
      " \001(\0132\031.clb.VirtualServerAddress\"\204\001\n\020AddM"
      "emberRequest\022)\n\006server\030\001 \001(\0132\031.clb.Virtu"
      "alServerAddress\022\"\n\006member\030\002 \001(\0132\022.clb.Me"
      "mberAddress\022!\n\006config\030\003 \001(\0132\021.clb.Member"
      "Config\"d\n\023RemoveMemberRequest\022)\n\006server\030"
      "\001 \001(\0132\031.clb.VirtualServerAddress\022\"\n\006memb"
      "er\030\002 \001(\0132\022.clb.MemberAddress\"\207\001\n\023ChangeM"
      "emberRequest\022)\n\006server\030\001 \001(\0132\031.clb.Virtu"
      "alServerAddress\022\"\n\006member\030\002 \001(\0132\022.clb.Me"
      "mberAddress\022!\n\006config\030\003 \001(\0132\021.clb.Member"
      "Config\"\026\n\006Status\022\014\n\004code\030\001 \001(\r*-\n\nSocket"
      "Type\022\017\n\013SOCK_STREAM\020\000\022\016\n\nSOCK_DGRAM\020\001*A\n"
      "\022BalancingAlgorithm\022\017\n\013ROUND_ROBIN\020\000\022\n\n\006"
      "RANDOM\020\001\022\016\n\nLEAST_CONN\020\0022\363\002\n\003Clb\022C\n\023Crea"
      "teVirtualServer\022\037.clb.CreateVirtualServe"
      "rRequest\032\013.clb.Status\022C\n\023UpdateVirtualSe"
      "rver\022\037.clb.UpdateVirtualServerRequest\032\013."
      "clb.Status\022C\n\023DeleteVirtualServer\022\037.clb."
      "DeleteVirtualServerRequest\032\013.clb.Status\022"
      "/\n\tAddMember\022\025.clb.AddMemberRequest\032\013.cl"
      "b.Status\0225\n\014ChangeMember\022\030.clb.ChangeMem"
      "berRequest\032\013.clb.Status\0225\n\014RemoveMember\022"
      "\030.clb.RemoveMemberRequest\032\013.clb.StatusB\003"
      "\200\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1651);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "netlink.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_netlink_2eproto
namespace clb {
const ::google::protobuf::EnumDescriptor* SocketType_descriptor() {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netlink_2eproto::file_level_enum_descriptors[0];
}
bool SocketType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BalancingAlgorithm_descriptor() {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netlink_2eproto::file_level_enum_descriptors[1];
}
bool BalancingAlgorithm_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Inet4Address::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Inet4Address::kAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Inet4Address::Inet4Address()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_netlink_2eproto::InitDefaultsInet4Address();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:clb.Inet4Address)
}
Inet4Address::Inet4Address(const Inet4Address& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  addr_ = from.addr_;
  // @@protoc_insertion_point(copy_constructor:clb.Inet4Address)
}

void Inet4Address::SharedCtor() {
  addr_ = 0u;
  _cached_size_ = 0;
}

Inet4Address::~Inet4Address() {
  // @@protoc_insertion_point(destructor:clb.Inet4Address)
  SharedDtor();
}

void Inet4Address::SharedDtor() {
}

void Inet4Address::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Inet4Address::descriptor() {
  ::protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Inet4Address& Inet4Address::default_instance() {
  ::protobuf_netlink_2eproto::InitDefaultsInet4Address();
  return *internal_default_instance();
}

Inet4Address* Inet4Address::New(::google::protobuf::Arena* arena) const {
  Inet4Address* n = new Inet4Address;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Inet4Address::Clear() {
// @@protoc_insertion_point(message_clear_start:clb.Inet4Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addr_ = 0u;
  _internal_metadata_.Clear();
}

bool Inet4Address::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clb.Inet4Address)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clb.Inet4Address)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clb.Inet4Address)
  return false;
#undef DO_
}

void Inet4Address::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clb.Inet4Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 addr = 1;
  if (this->addr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->addr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:clb.Inet4Address)
}

::google::protobuf::uint8* Inet4Address::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:clb.Inet4Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 addr = 1;
  if (this->addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->addr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clb.Inet4Address)
  return target;
}

size_t Inet4Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clb.Inet4Address)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 addr = 1;
  if (this->addr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->addr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Inet4Address::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:clb.Inet4Address)
  GOOGLE_DCHECK_NE(&from, this);
  const Inet4Address* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Inet4Address>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:clb.Inet4Address)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:clb.Inet4Address)
    MergeFrom(*source);
  }
}

void Inet4Address::MergeFrom(const Inet4Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:clb.Inet4Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.addr() != 0) {
    set_addr(from.addr());
  }
}

void Inet4Address::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:clb.Inet4Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Inet4Address::CopyFrom(const Inet4Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clb.Inet4Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Inet4Address::IsInitialized() const {
  return true;
}

void Inet4Address::Swap(Inet4Address* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Inet4Address::InternalSwap(Inet4Address* other) {
  using std::swap;
  swap(addr_, other->addr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Inet4Address::GetMetadata() const {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Inet6Address::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Inet6Address::kHiFieldNumber;
const int Inet6Address::kLoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Inet6Address::Inet6Address()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_netlink_2eproto::InitDefaultsInet6Address();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:clb.Inet6Address)
}
Inet6Address::Inet6Address(const Inet6Address& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hi_, &from.hi_,
    static_cast<size_t>(reinterpret_cast<char*>(&lo_) -
    reinterpret_cast<char*>(&hi_)) + sizeof(lo_));
  // @@protoc_insertion_point(copy_constructor:clb.Inet6Address)
}

void Inet6Address::SharedCtor() {
  ::memset(&hi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lo_) -
      reinterpret_cast<char*>(&hi_)) + sizeof(lo_));
  _cached_size_ = 0;
}

Inet6Address::~Inet6Address() {
  // @@protoc_insertion_point(destructor:clb.Inet6Address)
  SharedDtor();
}

void Inet6Address::SharedDtor() {
}

void Inet6Address::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Inet6Address::descriptor() {
  ::protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Inet6Address& Inet6Address::default_instance() {
  ::protobuf_netlink_2eproto::InitDefaultsInet6Address();
  return *internal_default_instance();
}

Inet6Address* Inet6Address::New(::google::protobuf::Arena* arena) const {
  Inet6Address* n = new Inet6Address;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Inet6Address::Clear() {
// @@protoc_insertion_point(message_clear_start:clb.Inet6Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lo_) -
      reinterpret_cast<char*>(&hi_)) + sizeof(lo_));
  _internal_metadata_.Clear();
}

bool Inet6Address::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clb.Inet6Address)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 hi = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 lo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clb.Inet6Address)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clb.Inet6Address)
  return false;
#undef DO_
}

void Inet6Address::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clb.Inet6Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 hi = 1;
  if (this->hi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->hi(), output);
  }

  // uint64 lo = 2;
  if (this->lo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->lo(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:clb.Inet6Address)
}

::google::protobuf::uint8* Inet6Address::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:clb.Inet6Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 hi = 1;
  if (this->hi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->hi(), target);
  }

  // uint64 lo = 2;
  if (this->lo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->lo(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clb.Inet6Address)
  return target;
}

size_t Inet6Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clb.Inet6Address)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 hi = 1;
  if (this->hi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->hi());
  }

  // uint64 lo = 2;
  if (this->lo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lo());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Inet6Address::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:clb.Inet6Address)
  GOOGLE_DCHECK_NE(&from, this);
  const Inet6Address* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Inet6Address>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:clb.Inet6Address)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:clb.Inet6Address)
    MergeFrom(*source);
  }
}

void Inet6Address::MergeFrom(const Inet6Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:clb.Inet6Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hi() != 0) {
    set_hi(from.hi());
  }
  if (from.lo() != 0) {
    set_lo(from.lo());
  }
}

void Inet6Address::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:clb.Inet6Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Inet6Address::CopyFrom(const Inet6Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clb.Inet6Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Inet6Address::IsInitialized() const {
  return true;
}

void Inet6Address::Swap(Inet6Address* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Inet6Address::InternalSwap(Inet6Address* other) {
  using std::swap;
  swap(hi_, other->hi_);
  swap(lo_, other->lo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Inet6Address::GetMetadata() const {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Address::InitAsDefaultInstance() {
  ::clb::_Address_default_instance_.inet4_ = const_cast< ::clb::Inet4Address*>(
      ::clb::Inet4Address::internal_default_instance());
  ::clb::_Address_default_instance_.inet6_ = const_cast< ::clb::Inet6Address*>(
      ::clb::Inet6Address::internal_default_instance());
}
void Address::set_allocated_inet4(::clb::Inet4Address* inet4) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_address();
  if (inet4) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      inet4 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inet4, submessage_arena);
    }
    set_has_inet4();
    address_.inet4_ = inet4;
  }
  // @@protoc_insertion_point(field_set_allocated:clb.Address.inet4)
}
void Address::set_allocated_inet6(::clb::Inet6Address* inet6) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_address();
  if (inet6) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      inet6 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inet6, submessage_arena);
    }
    set_has_inet6();
    address_.inet6_ = inet6;
  }
  // @@protoc_insertion_point(field_set_allocated:clb.Address.inet6)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Address::kInet4FieldNumber;
const int Address::kInet6FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Address::Address()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_netlink_2eproto::InitDefaultsAddress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:clb.Address)
}
Address::Address(const Address& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_address();
  switch (from.address_case()) {
    case kInet4: {
      mutable_inet4()->::clb::Inet4Address::MergeFrom(from.inet4());
      break;
    }
    case kInet6: {
      mutable_inet6()->::clb::Inet6Address::MergeFrom(from.inet6());
      break;
    }
    case ADDRESS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:clb.Address)
}

void Address::SharedCtor() {
  clear_has_address();
  _cached_size_ = 0;
}

Address::~Address() {
  // @@protoc_insertion_point(destructor:clb.Address)
  SharedDtor();
}

void Address::SharedDtor() {
  if (has_address()) {
    clear_address();
  }
}

void Address::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Address::descriptor() {
  ::protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Address& Address::default_instance() {
  ::protobuf_netlink_2eproto::InitDefaultsAddress();
  return *internal_default_instance();
}

Address* Address::New(::google::protobuf::Arena* arena) const {
  Address* n = new Address;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Address::clear_address() {
// @@protoc_insertion_point(one_of_clear_start:clb.Address)
  switch (address_case()) {
    case kInet4: {
      delete address_.inet4_;
      break;
    }
    case kInet6: {
      delete address_.inet6_;
      break;
    }
    case ADDRESS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ADDRESS_NOT_SET;
}


void Address::Clear() {
// @@protoc_insertion_point(message_clear_start:clb.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_address();
  _internal_metadata_.Clear();
}

bool Address::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clb.Address)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .clb.Inet4Address inet4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inet4()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .clb.Inet6Address inet6 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inet6()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clb.Address)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clb.Address)
  return false;
#undef DO_
}

void Address::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clb.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.Inet4Address inet4 = 1;
  if (has_inet4()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *address_.inet4_, output);
  }

  // .clb.Inet6Address inet6 = 2;
  if (has_inet6()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *address_.inet6_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:clb.Address)
}

::google::protobuf::uint8* Address::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:clb.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.Inet4Address inet4 = 1;
  if (has_inet4()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *address_.inet4_, deterministic, target);
  }

  // .clb.Inet6Address inet6 = 2;
  if (has_inet6()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *address_.inet6_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clb.Address)
  return target;
}

size_t Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clb.Address)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (address_case()) {
    // .clb.Inet4Address inet4 = 1;
    case kInet4: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *address_.inet4_);
      break;
    }
    // .clb.Inet6Address inet6 = 2;
    case kInet6: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *address_.inet6_);
      break;
    }
    case ADDRESS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Address::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:clb.Address)
  GOOGLE_DCHECK_NE(&from, this);
  const Address* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Address>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:clb.Address)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:clb.Address)
    MergeFrom(*source);
  }
}

void Address::MergeFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:clb.Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.address_case()) {
    case kInet4: {
      mutable_inet4()->::clb::Inet4Address::MergeFrom(from.inet4());
      break;
    }
    case kInet6: {
      mutable_inet6()->::clb::Inet6Address::MergeFrom(from.inet6());
      break;
    }
    case ADDRESS_NOT_SET: {
      break;
    }
  }
}

void Address::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:clb.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Address::CopyFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clb.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Address::IsInitialized() const {
  return true;
}

void Address::Swap(Address* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Address::InternalSwap(Address* other) {
  using std::swap;
  swap(address_, other->address_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Address::GetMetadata() const {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VirtualServerAddress::InitAsDefaultInstance() {
  ::clb::_VirtualServerAddress_default_instance_._instance.get_mutable()->address_ = const_cast< ::clb::Address*>(
      ::clb::Address::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VirtualServerAddress::kTypeFieldNumber;
const int VirtualServerAddress::kAddressFieldNumber;
const int VirtualServerAddress::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VirtualServerAddress::VirtualServerAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_netlink_2eproto::InitDefaultsVirtualServerAddress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:clb.VirtualServerAddress)
}
VirtualServerAddress::VirtualServerAddress(const VirtualServerAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_address()) {
    address_ = new ::clb::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&type_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:clb.VirtualServerAddress)
}

void VirtualServerAddress::SharedCtor() {
  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&address_)) + sizeof(port_));
  _cached_size_ = 0;
}

VirtualServerAddress::~VirtualServerAddress() {
  // @@protoc_insertion_point(destructor:clb.VirtualServerAddress)
  SharedDtor();
}

void VirtualServerAddress::SharedDtor() {
  if (this != internal_default_instance()) delete address_;
}

void VirtualServerAddress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VirtualServerAddress::descriptor() {
  ::protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VirtualServerAddress& VirtualServerAddress::default_instance() {
  ::protobuf_netlink_2eproto::InitDefaultsVirtualServerAddress();
  return *internal_default_instance();
}

VirtualServerAddress* VirtualServerAddress::New(::google::protobuf::Arena* arena) const {
  VirtualServerAddress* n = new VirtualServerAddress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VirtualServerAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:clb.VirtualServerAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&type_)) + sizeof(port_));
  _internal_metadata_.Clear();
}

bool VirtualServerAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clb.VirtualServerAddress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .clb.SocketType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::clb::SocketType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .clb.Address address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clb.VirtualServerAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clb.VirtualServerAddress)
  return false;
#undef DO_
}

void VirtualServerAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clb.VirtualServerAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.SocketType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .clb.Address address = 2;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->address_, output);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:clb.VirtualServerAddress)
}

::google::protobuf::uint8* VirtualServerAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:clb.VirtualServerAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.SocketType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .clb.Address address = 2;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->address_, deterministic, target);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clb.VirtualServerAddress)
  return target;
}

size_t VirtualServerAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clb.VirtualServerAddress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .clb.Address address = 2;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->address_);
  }

  // .clb.SocketType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VirtualServerAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:clb.VirtualServerAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const VirtualServerAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VirtualServerAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:clb.VirtualServerAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:clb.VirtualServerAddress)
    MergeFrom(*source);
  }
}

void VirtualServerAddress::MergeFrom(const VirtualServerAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:clb.VirtualServerAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    mutable_address()->::clb::Address::MergeFrom(from.address());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void VirtualServerAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:clb.VirtualServerAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VirtualServerAddress::CopyFrom(const VirtualServerAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clb.VirtualServerAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtualServerAddress::IsInitialized() const {
  return true;
}

void VirtualServerAddress::Swap(VirtualServerAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VirtualServerAddress::InternalSwap(VirtualServerAddress* other) {
  using std::swap;
  swap(address_, other->address_);
  swap(type_, other->type_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VirtualServerAddress::GetMetadata() const {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VirtualServerConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VirtualServerConfig::kAlgorithmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VirtualServerConfig::VirtualServerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_netlink_2eproto::InitDefaultsVirtualServerConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:clb.VirtualServerConfig)
}
VirtualServerConfig::VirtualServerConfig(const VirtualServerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  algorithm_ = from.algorithm_;
  // @@protoc_insertion_point(copy_constructor:clb.VirtualServerConfig)
}

void VirtualServerConfig::SharedCtor() {
  algorithm_ = 0;
  _cached_size_ = 0;
}

VirtualServerConfig::~VirtualServerConfig() {
  // @@protoc_insertion_point(destructor:clb.VirtualServerConfig)
  SharedDtor();
}

void VirtualServerConfig::SharedDtor() {
}

void VirtualServerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VirtualServerConfig::descriptor() {
  ::protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VirtualServerConfig& VirtualServerConfig::default_instance() {
  ::protobuf_netlink_2eproto::InitDefaultsVirtualServerConfig();
  return *internal_default_instance();
}

VirtualServerConfig* VirtualServerConfig::New(::google::protobuf::Arena* arena) const {
  VirtualServerConfig* n = new VirtualServerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VirtualServerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:clb.VirtualServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  algorithm_ = 0;
  _internal_metadata_.Clear();
}

bool VirtualServerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clb.VirtualServerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .clb.BalancingAlgorithm algorithm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_algorithm(static_cast< ::clb::BalancingAlgorithm >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clb.VirtualServerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clb.VirtualServerConfig)
  return false;
#undef DO_
}

void VirtualServerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clb.VirtualServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.BalancingAlgorithm algorithm = 1;
  if (this->algorithm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->algorithm(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:clb.VirtualServerConfig)
}

::google::protobuf::uint8* VirtualServerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:clb.VirtualServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.BalancingAlgorithm algorithm = 1;
  if (this->algorithm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->algorithm(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clb.VirtualServerConfig)
  return target;
}

size_t VirtualServerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clb.VirtualServerConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .clb.BalancingAlgorithm algorithm = 1;
  if (this->algorithm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->algorithm());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VirtualServerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:clb.VirtualServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const VirtualServerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VirtualServerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:clb.VirtualServerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:clb.VirtualServerConfig)
    MergeFrom(*source);
  }
}

void VirtualServerConfig::MergeFrom(const VirtualServerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:clb.VirtualServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.algorithm() != 0) {
    set_algorithm(from.algorithm());
  }
}

void VirtualServerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:clb.VirtualServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VirtualServerConfig::CopyFrom(const VirtualServerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clb.VirtualServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtualServerConfig::IsInitialized() const {
  return true;
}

void VirtualServerConfig::Swap(VirtualServerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VirtualServerConfig::InternalSwap(VirtualServerConfig* other) {
  using std::swap;
  swap(algorithm_, other->algorithm_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VirtualServerConfig::GetMetadata() const {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemberAddress::InitAsDefaultInstance() {
  ::clb::_MemberAddress_default_instance_._instance.get_mutable()->address_ = const_cast< ::clb::Address*>(
      ::clb::Address::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemberAddress::kAddressFieldNumber;
const int MemberAddress::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemberAddress::MemberAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_netlink_2eproto::InitDefaultsMemberAddress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:clb.MemberAddress)
}
MemberAddress::MemberAddress(const MemberAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_address()) {
    address_ = new ::clb::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:clb.MemberAddress)
}

void MemberAddress::SharedCtor() {
  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&address_)) + sizeof(port_));
  _cached_size_ = 0;
}

MemberAddress::~MemberAddress() {
  // @@protoc_insertion_point(destructor:clb.MemberAddress)
  SharedDtor();
}

void MemberAddress::SharedDtor() {
  if (this != internal_default_instance()) delete address_;
}

void MemberAddress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberAddress::descriptor() {
  ::protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemberAddress& MemberAddress::default_instance() {
  ::protobuf_netlink_2eproto::InitDefaultsMemberAddress();
  return *internal_default_instance();
}

MemberAddress* MemberAddress::New(::google::protobuf::Arena* arena) const {
  MemberAddress* n = new MemberAddress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemberAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:clb.MemberAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  port_ = 0u;
  _internal_metadata_.Clear();
}

bool MemberAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clb.MemberAddress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .clb.Address address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clb.MemberAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clb.MemberAddress)
  return false;
#undef DO_
}

void MemberAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clb.MemberAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.Address address = 1;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->address_, output);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:clb.MemberAddress)
}

::google::protobuf::uint8* MemberAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:clb.MemberAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.Address address = 1;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->address_, deterministic, target);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clb.MemberAddress)
  return target;
}

size_t MemberAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clb.MemberAddress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .clb.Address address = 1;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->address_);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemberAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:clb.MemberAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const MemberAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemberAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:clb.MemberAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:clb.MemberAddress)
    MergeFrom(*source);
  }
}

void MemberAddress::MergeFrom(const MemberAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:clb.MemberAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    mutable_address()->::clb::Address::MergeFrom(from.address());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void MemberAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:clb.MemberAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemberAddress::CopyFrom(const MemberAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clb.MemberAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemberAddress::IsInitialized() const {
  return true;
}

void MemberAddress::Swap(MemberAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemberAddress::InternalSwap(MemberAddress* other) {
  using std::swap;
  swap(address_, other->address_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemberAddress::GetMetadata() const {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemberConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemberConfig::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemberConfig::MemberConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_netlink_2eproto::InitDefaultsMemberConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:clb.MemberConfig)
}
MemberConfig::MemberConfig(const MemberConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  weight_ = from.weight_;
  // @@protoc_insertion_point(copy_constructor:clb.MemberConfig)
}

void MemberConfig::SharedCtor() {
  weight_ = 0;
  _cached_size_ = 0;
}

MemberConfig::~MemberConfig() {
  // @@protoc_insertion_point(destructor:clb.MemberConfig)
  SharedDtor();
}

void MemberConfig::SharedDtor() {
}

void MemberConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberConfig::descriptor() {
  ::protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemberConfig& MemberConfig::default_instance() {
  ::protobuf_netlink_2eproto::InitDefaultsMemberConfig();
  return *internal_default_instance();
}

MemberConfig* MemberConfig::New(::google::protobuf::Arena* arena) const {
  MemberConfig* n = new MemberConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemberConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:clb.MemberConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weight_ = 0;
  _internal_metadata_.Clear();
}

bool MemberConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clb.MemberConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float weight = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clb.MemberConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clb.MemberConfig)
  return false;
#undef DO_
}

void MemberConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clb.MemberConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float weight = 1;
  if (this->weight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->weight(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:clb.MemberConfig)
}

::google::protobuf::uint8* MemberConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:clb.MemberConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float weight = 1;
  if (this->weight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->weight(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clb.MemberConfig)
  return target;
}

size_t MemberConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clb.MemberConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float weight = 1;
  if (this->weight() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemberConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:clb.MemberConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MemberConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemberConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:clb.MemberConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:clb.MemberConfig)
    MergeFrom(*source);
  }
}

void MemberConfig::MergeFrom(const MemberConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:clb.MemberConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.weight() != 0) {
    set_weight(from.weight());
  }
}

void MemberConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:clb.MemberConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemberConfig::CopyFrom(const MemberConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clb.MemberConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemberConfig::IsInitialized() const {
  return true;
}

void MemberConfig::Swap(MemberConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemberConfig::InternalSwap(MemberConfig* other) {
  using std::swap;
  swap(weight_, other->weight_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemberConfig::GetMetadata() const {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateVirtualServerRequest::InitAsDefaultInstance() {
  ::clb::_CreateVirtualServerRequest_default_instance_._instance.get_mutable()->address_ = const_cast< ::clb::VirtualServerAddress*>(
      ::clb::VirtualServerAddress::internal_default_instance());
  ::clb::_CreateVirtualServerRequest_default_instance_._instance.get_mutable()->config_ = const_cast< ::clb::VirtualServerConfig*>(
      ::clb::VirtualServerConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateVirtualServerRequest::kAddressFieldNumber;
const int CreateVirtualServerRequest::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateVirtualServerRequest::CreateVirtualServerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_netlink_2eproto::InitDefaultsCreateVirtualServerRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:clb.CreateVirtualServerRequest)
}
CreateVirtualServerRequest::CreateVirtualServerRequest(const CreateVirtualServerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_address()) {
    address_ = new ::clb::VirtualServerAddress(*from.address_);
  } else {
    address_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::clb::VirtualServerConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:clb.CreateVirtualServerRequest)
}

void CreateVirtualServerRequest::SharedCtor() {
  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&address_)) + sizeof(config_));
  _cached_size_ = 0;
}

CreateVirtualServerRequest::~CreateVirtualServerRequest() {
  // @@protoc_insertion_point(destructor:clb.CreateVirtualServerRequest)
  SharedDtor();
}

void CreateVirtualServerRequest::SharedDtor() {
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete config_;
}

void CreateVirtualServerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateVirtualServerRequest::descriptor() {
  ::protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateVirtualServerRequest& CreateVirtualServerRequest::default_instance() {
  ::protobuf_netlink_2eproto::InitDefaultsCreateVirtualServerRequest();
  return *internal_default_instance();
}

CreateVirtualServerRequest* CreateVirtualServerRequest::New(::google::protobuf::Arena* arena) const {
  CreateVirtualServerRequest* n = new CreateVirtualServerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateVirtualServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:clb.CreateVirtualServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateVirtualServerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clb.CreateVirtualServerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .clb.VirtualServerAddress address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .clb.VirtualServerConfig config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clb.CreateVirtualServerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clb.CreateVirtualServerRequest)
  return false;
#undef DO_
}

void CreateVirtualServerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clb.CreateVirtualServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.VirtualServerAddress address = 1;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->address_, output);
  }

  // .clb.VirtualServerConfig config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:clb.CreateVirtualServerRequest)
}

::google::protobuf::uint8* CreateVirtualServerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:clb.CreateVirtualServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.VirtualServerAddress address = 1;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->address_, deterministic, target);
  }

  // .clb.VirtualServerConfig config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clb.CreateVirtualServerRequest)
  return target;
}

size_t CreateVirtualServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clb.CreateVirtualServerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .clb.VirtualServerAddress address = 1;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->address_);
  }

  // .clb.VirtualServerConfig config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateVirtualServerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:clb.CreateVirtualServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateVirtualServerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateVirtualServerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:clb.CreateVirtualServerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:clb.CreateVirtualServerRequest)
    MergeFrom(*source);
  }
}

void CreateVirtualServerRequest::MergeFrom(const CreateVirtualServerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:clb.CreateVirtualServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    mutable_address()->::clb::VirtualServerAddress::MergeFrom(from.address());
  }
  if (from.has_config()) {
    mutable_config()->::clb::VirtualServerConfig::MergeFrom(from.config());
  }
}

void CreateVirtualServerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:clb.CreateVirtualServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateVirtualServerRequest::CopyFrom(const CreateVirtualServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clb.CreateVirtualServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVirtualServerRequest::IsInitialized() const {
  return true;
}

void CreateVirtualServerRequest::Swap(CreateVirtualServerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateVirtualServerRequest::InternalSwap(CreateVirtualServerRequest* other) {
  using std::swap;
  swap(address_, other->address_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateVirtualServerRequest::GetMetadata() const {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateVirtualServerRequest::InitAsDefaultInstance() {
  ::clb::_UpdateVirtualServerRequest_default_instance_._instance.get_mutable()->address_ = const_cast< ::clb::VirtualServerAddress*>(
      ::clb::VirtualServerAddress::internal_default_instance());
  ::clb::_UpdateVirtualServerRequest_default_instance_._instance.get_mutable()->config_ = const_cast< ::clb::VirtualServerConfig*>(
      ::clb::VirtualServerConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateVirtualServerRequest::kAddressFieldNumber;
const int UpdateVirtualServerRequest::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateVirtualServerRequest::UpdateVirtualServerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_netlink_2eproto::InitDefaultsUpdateVirtualServerRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:clb.UpdateVirtualServerRequest)
}
UpdateVirtualServerRequest::UpdateVirtualServerRequest(const UpdateVirtualServerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_address()) {
    address_ = new ::clb::VirtualServerAddress(*from.address_);
  } else {
    address_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::clb::VirtualServerConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:clb.UpdateVirtualServerRequest)
}

void UpdateVirtualServerRequest::SharedCtor() {
  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&address_)) + sizeof(config_));
  _cached_size_ = 0;
}

UpdateVirtualServerRequest::~UpdateVirtualServerRequest() {
  // @@protoc_insertion_point(destructor:clb.UpdateVirtualServerRequest)
  SharedDtor();
}

void UpdateVirtualServerRequest::SharedDtor() {
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete config_;
}

void UpdateVirtualServerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateVirtualServerRequest::descriptor() {
  ::protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateVirtualServerRequest& UpdateVirtualServerRequest::default_instance() {
  ::protobuf_netlink_2eproto::InitDefaultsUpdateVirtualServerRequest();
  return *internal_default_instance();
}

UpdateVirtualServerRequest* UpdateVirtualServerRequest::New(::google::protobuf::Arena* arena) const {
  UpdateVirtualServerRequest* n = new UpdateVirtualServerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateVirtualServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:clb.UpdateVirtualServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateVirtualServerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clb.UpdateVirtualServerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .clb.VirtualServerAddress address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .clb.VirtualServerConfig config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clb.UpdateVirtualServerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clb.UpdateVirtualServerRequest)
  return false;
#undef DO_
}

void UpdateVirtualServerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clb.UpdateVirtualServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.VirtualServerAddress address = 1;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->address_, output);
  }

  // .clb.VirtualServerConfig config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:clb.UpdateVirtualServerRequest)
}

::google::protobuf::uint8* UpdateVirtualServerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:clb.UpdateVirtualServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.VirtualServerAddress address = 1;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->address_, deterministic, target);
  }

  // .clb.VirtualServerConfig config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clb.UpdateVirtualServerRequest)
  return target;
}

size_t UpdateVirtualServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clb.UpdateVirtualServerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .clb.VirtualServerAddress address = 1;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->address_);
  }

  // .clb.VirtualServerConfig config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateVirtualServerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:clb.UpdateVirtualServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateVirtualServerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateVirtualServerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:clb.UpdateVirtualServerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:clb.UpdateVirtualServerRequest)
    MergeFrom(*source);
  }
}

void UpdateVirtualServerRequest::MergeFrom(const UpdateVirtualServerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:clb.UpdateVirtualServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    mutable_address()->::clb::VirtualServerAddress::MergeFrom(from.address());
  }
  if (from.has_config()) {
    mutable_config()->::clb::VirtualServerConfig::MergeFrom(from.config());
  }
}

void UpdateVirtualServerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:clb.UpdateVirtualServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateVirtualServerRequest::CopyFrom(const UpdateVirtualServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clb.UpdateVirtualServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateVirtualServerRequest::IsInitialized() const {
  return true;
}

void UpdateVirtualServerRequest::Swap(UpdateVirtualServerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateVirtualServerRequest::InternalSwap(UpdateVirtualServerRequest* other) {
  using std::swap;
  swap(address_, other->address_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateVirtualServerRequest::GetMetadata() const {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteVirtualServerRequest::InitAsDefaultInstance() {
  ::clb::_DeleteVirtualServerRequest_default_instance_._instance.get_mutable()->address_ = const_cast< ::clb::VirtualServerAddress*>(
      ::clb::VirtualServerAddress::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteVirtualServerRequest::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteVirtualServerRequest::DeleteVirtualServerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_netlink_2eproto::InitDefaultsDeleteVirtualServerRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:clb.DeleteVirtualServerRequest)
}
DeleteVirtualServerRequest::DeleteVirtualServerRequest(const DeleteVirtualServerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_address()) {
    address_ = new ::clb::VirtualServerAddress(*from.address_);
  } else {
    address_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:clb.DeleteVirtualServerRequest)
}

void DeleteVirtualServerRequest::SharedCtor() {
  address_ = NULL;
  _cached_size_ = 0;
}

DeleteVirtualServerRequest::~DeleteVirtualServerRequest() {
  // @@protoc_insertion_point(destructor:clb.DeleteVirtualServerRequest)
  SharedDtor();
}

void DeleteVirtualServerRequest::SharedDtor() {
  if (this != internal_default_instance()) delete address_;
}

void DeleteVirtualServerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteVirtualServerRequest::descriptor() {
  ::protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteVirtualServerRequest& DeleteVirtualServerRequest::default_instance() {
  ::protobuf_netlink_2eproto::InitDefaultsDeleteVirtualServerRequest();
  return *internal_default_instance();
}

DeleteVirtualServerRequest* DeleteVirtualServerRequest::New(::google::protobuf::Arena* arena) const {
  DeleteVirtualServerRequest* n = new DeleteVirtualServerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteVirtualServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:clb.DeleteVirtualServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  _internal_metadata_.Clear();
}

bool DeleteVirtualServerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clb.DeleteVirtualServerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .clb.VirtualServerAddress address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clb.DeleteVirtualServerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clb.DeleteVirtualServerRequest)
  return false;
#undef DO_
}

void DeleteVirtualServerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clb.DeleteVirtualServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.VirtualServerAddress address = 1;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->address_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:clb.DeleteVirtualServerRequest)
}

::google::protobuf::uint8* DeleteVirtualServerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:clb.DeleteVirtualServerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.VirtualServerAddress address = 1;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->address_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clb.DeleteVirtualServerRequest)
  return target;
}

size_t DeleteVirtualServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clb.DeleteVirtualServerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .clb.VirtualServerAddress address = 1;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->address_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteVirtualServerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:clb.DeleteVirtualServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteVirtualServerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteVirtualServerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:clb.DeleteVirtualServerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:clb.DeleteVirtualServerRequest)
    MergeFrom(*source);
  }
}

void DeleteVirtualServerRequest::MergeFrom(const DeleteVirtualServerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:clb.DeleteVirtualServerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    mutable_address()->::clb::VirtualServerAddress::MergeFrom(from.address());
  }
}

void DeleteVirtualServerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:clb.DeleteVirtualServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteVirtualServerRequest::CopyFrom(const DeleteVirtualServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clb.DeleteVirtualServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteVirtualServerRequest::IsInitialized() const {
  return true;
}

void DeleteVirtualServerRequest::Swap(DeleteVirtualServerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteVirtualServerRequest::InternalSwap(DeleteVirtualServerRequest* other) {
  using std::swap;
  swap(address_, other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteVirtualServerRequest::GetMetadata() const {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddMemberRequest::InitAsDefaultInstance() {
  ::clb::_AddMemberRequest_default_instance_._instance.get_mutable()->server_ = const_cast< ::clb::VirtualServerAddress*>(
      ::clb::VirtualServerAddress::internal_default_instance());
  ::clb::_AddMemberRequest_default_instance_._instance.get_mutable()->member_ = const_cast< ::clb::MemberAddress*>(
      ::clb::MemberAddress::internal_default_instance());
  ::clb::_AddMemberRequest_default_instance_._instance.get_mutable()->config_ = const_cast< ::clb::MemberConfig*>(
      ::clb::MemberConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddMemberRequest::kServerFieldNumber;
const int AddMemberRequest::kMemberFieldNumber;
const int AddMemberRequest::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddMemberRequest::AddMemberRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_netlink_2eproto::InitDefaultsAddMemberRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:clb.AddMemberRequest)
}
AddMemberRequest::AddMemberRequest(const AddMemberRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_server()) {
    server_ = new ::clb::VirtualServerAddress(*from.server_);
  } else {
    server_ = NULL;
  }
  if (from.has_member()) {
    member_ = new ::clb::MemberAddress(*from.member_);
  } else {
    member_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::clb::MemberConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:clb.AddMemberRequest)
}

void AddMemberRequest::SharedCtor() {
  ::memset(&server_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&server_)) + sizeof(config_));
  _cached_size_ = 0;
}

AddMemberRequest::~AddMemberRequest() {
  // @@protoc_insertion_point(destructor:clb.AddMemberRequest)
  SharedDtor();
}

void AddMemberRequest::SharedDtor() {
  if (this != internal_default_instance()) delete server_;
  if (this != internal_default_instance()) delete member_;
  if (this != internal_default_instance()) delete config_;
}

void AddMemberRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddMemberRequest::descriptor() {
  ::protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddMemberRequest& AddMemberRequest::default_instance() {
  ::protobuf_netlink_2eproto::InitDefaultsAddMemberRequest();
  return *internal_default_instance();
}

AddMemberRequest* AddMemberRequest::New(::google::protobuf::Arena* arena) const {
  AddMemberRequest* n = new AddMemberRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:clb.AddMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && server_ != NULL) {
    delete server_;
  }
  server_ = NULL;
  if (GetArenaNoVirtual() == NULL && member_ != NULL) {
    delete member_;
  }
  member_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool AddMemberRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clb.AddMemberRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .clb.VirtualServerAddress server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .clb.MemberAddress member = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .clb.MemberConfig config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clb.AddMemberRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clb.AddMemberRequest)
  return false;
#undef DO_
}

void AddMemberRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clb.AddMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.VirtualServerAddress server = 1;
  if (this->has_server()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->server_, output);
  }

  // .clb.MemberAddress member = 2;
  if (this->has_member()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->member_, output);
  }

  // .clb.MemberConfig config = 3;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:clb.AddMemberRequest)
}

::google::protobuf::uint8* AddMemberRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:clb.AddMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.VirtualServerAddress server = 1;
  if (this->has_server()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->server_, deterministic, target);
  }

  // .clb.MemberAddress member = 2;
  if (this->has_member()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->member_, deterministic, target);
  }

  // .clb.MemberConfig config = 3;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clb.AddMemberRequest)
  return target;
}

size_t AddMemberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clb.AddMemberRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .clb.VirtualServerAddress server = 1;
  if (this->has_server()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->server_);
  }

  // .clb.MemberAddress member = 2;
  if (this->has_member()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->member_);
  }

  // .clb.MemberConfig config = 3;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddMemberRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:clb.AddMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddMemberRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddMemberRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:clb.AddMemberRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:clb.AddMemberRequest)
    MergeFrom(*source);
  }
}

void AddMemberRequest::MergeFrom(const AddMemberRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:clb.AddMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server()) {
    mutable_server()->::clb::VirtualServerAddress::MergeFrom(from.server());
  }
  if (from.has_member()) {
    mutable_member()->::clb::MemberAddress::MergeFrom(from.member());
  }
  if (from.has_config()) {
    mutable_config()->::clb::MemberConfig::MergeFrom(from.config());
  }
}

void AddMemberRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:clb.AddMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddMemberRequest::CopyFrom(const AddMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clb.AddMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddMemberRequest::IsInitialized() const {
  return true;
}

void AddMemberRequest::Swap(AddMemberRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddMemberRequest::InternalSwap(AddMemberRequest* other) {
  using std::swap;
  swap(server_, other->server_);
  swap(member_, other->member_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddMemberRequest::GetMetadata() const {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveMemberRequest::InitAsDefaultInstance() {
  ::clb::_RemoveMemberRequest_default_instance_._instance.get_mutable()->server_ = const_cast< ::clb::VirtualServerAddress*>(
      ::clb::VirtualServerAddress::internal_default_instance());
  ::clb::_RemoveMemberRequest_default_instance_._instance.get_mutable()->member_ = const_cast< ::clb::MemberAddress*>(
      ::clb::MemberAddress::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveMemberRequest::kServerFieldNumber;
const int RemoveMemberRequest::kMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveMemberRequest::RemoveMemberRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_netlink_2eproto::InitDefaultsRemoveMemberRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:clb.RemoveMemberRequest)
}
RemoveMemberRequest::RemoveMemberRequest(const RemoveMemberRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_server()) {
    server_ = new ::clb::VirtualServerAddress(*from.server_);
  } else {
    server_ = NULL;
  }
  if (from.has_member()) {
    member_ = new ::clb::MemberAddress(*from.member_);
  } else {
    member_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:clb.RemoveMemberRequest)
}

void RemoveMemberRequest::SharedCtor() {
  ::memset(&server_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_) -
      reinterpret_cast<char*>(&server_)) + sizeof(member_));
  _cached_size_ = 0;
}

RemoveMemberRequest::~RemoveMemberRequest() {
  // @@protoc_insertion_point(destructor:clb.RemoveMemberRequest)
  SharedDtor();
}

void RemoveMemberRequest::SharedDtor() {
  if (this != internal_default_instance()) delete server_;
  if (this != internal_default_instance()) delete member_;
}

void RemoveMemberRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveMemberRequest::descriptor() {
  ::protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveMemberRequest& RemoveMemberRequest::default_instance() {
  ::protobuf_netlink_2eproto::InitDefaultsRemoveMemberRequest();
  return *internal_default_instance();
}

RemoveMemberRequest* RemoveMemberRequest::New(::google::protobuf::Arena* arena) const {
  RemoveMemberRequest* n = new RemoveMemberRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:clb.RemoveMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && server_ != NULL) {
    delete server_;
  }
  server_ = NULL;
  if (GetArenaNoVirtual() == NULL && member_ != NULL) {
    delete member_;
  }
  member_ = NULL;
  _internal_metadata_.Clear();
}

bool RemoveMemberRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clb.RemoveMemberRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .clb.VirtualServerAddress server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .clb.MemberAddress member = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clb.RemoveMemberRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clb.RemoveMemberRequest)
  return false;
#undef DO_
}

void RemoveMemberRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clb.RemoveMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.VirtualServerAddress server = 1;
  if (this->has_server()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->server_, output);
  }

  // .clb.MemberAddress member = 2;
  if (this->has_member()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->member_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:clb.RemoveMemberRequest)
}

::google::protobuf::uint8* RemoveMemberRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:clb.RemoveMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.VirtualServerAddress server = 1;
  if (this->has_server()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->server_, deterministic, target);
  }

  // .clb.MemberAddress member = 2;
  if (this->has_member()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->member_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clb.RemoveMemberRequest)
  return target;
}

size_t RemoveMemberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clb.RemoveMemberRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .clb.VirtualServerAddress server = 1;
  if (this->has_server()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->server_);
  }

  // .clb.MemberAddress member = 2;
  if (this->has_member()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->member_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveMemberRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:clb.RemoveMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveMemberRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveMemberRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:clb.RemoveMemberRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:clb.RemoveMemberRequest)
    MergeFrom(*source);
  }
}

void RemoveMemberRequest::MergeFrom(const RemoveMemberRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:clb.RemoveMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server()) {
    mutable_server()->::clb::VirtualServerAddress::MergeFrom(from.server());
  }
  if (from.has_member()) {
    mutable_member()->::clb::MemberAddress::MergeFrom(from.member());
  }
}

void RemoveMemberRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:clb.RemoveMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveMemberRequest::CopyFrom(const RemoveMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clb.RemoveMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveMemberRequest::IsInitialized() const {
  return true;
}

void RemoveMemberRequest::Swap(RemoveMemberRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveMemberRequest::InternalSwap(RemoveMemberRequest* other) {
  using std::swap;
  swap(server_, other->server_);
  swap(member_, other->member_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveMemberRequest::GetMetadata() const {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeMemberRequest::InitAsDefaultInstance() {
  ::clb::_ChangeMemberRequest_default_instance_._instance.get_mutable()->server_ = const_cast< ::clb::VirtualServerAddress*>(
      ::clb::VirtualServerAddress::internal_default_instance());
  ::clb::_ChangeMemberRequest_default_instance_._instance.get_mutable()->member_ = const_cast< ::clb::MemberAddress*>(
      ::clb::MemberAddress::internal_default_instance());
  ::clb::_ChangeMemberRequest_default_instance_._instance.get_mutable()->config_ = const_cast< ::clb::MemberConfig*>(
      ::clb::MemberConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeMemberRequest::kServerFieldNumber;
const int ChangeMemberRequest::kMemberFieldNumber;
const int ChangeMemberRequest::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeMemberRequest::ChangeMemberRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_netlink_2eproto::InitDefaultsChangeMemberRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:clb.ChangeMemberRequest)
}
ChangeMemberRequest::ChangeMemberRequest(const ChangeMemberRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_server()) {
    server_ = new ::clb::VirtualServerAddress(*from.server_);
  } else {
    server_ = NULL;
  }
  if (from.has_member()) {
    member_ = new ::clb::MemberAddress(*from.member_);
  } else {
    member_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::clb::MemberConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:clb.ChangeMemberRequest)
}

void ChangeMemberRequest::SharedCtor() {
  ::memset(&server_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&server_)) + sizeof(config_));
  _cached_size_ = 0;
}

ChangeMemberRequest::~ChangeMemberRequest() {
  // @@protoc_insertion_point(destructor:clb.ChangeMemberRequest)
  SharedDtor();
}

void ChangeMemberRequest::SharedDtor() {
  if (this != internal_default_instance()) delete server_;
  if (this != internal_default_instance()) delete member_;
  if (this != internal_default_instance()) delete config_;
}

void ChangeMemberRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeMemberRequest::descriptor() {
  ::protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeMemberRequest& ChangeMemberRequest::default_instance() {
  ::protobuf_netlink_2eproto::InitDefaultsChangeMemberRequest();
  return *internal_default_instance();
}

ChangeMemberRequest* ChangeMemberRequest::New(::google::protobuf::Arena* arena) const {
  ChangeMemberRequest* n = new ChangeMemberRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:clb.ChangeMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && server_ != NULL) {
    delete server_;
  }
  server_ = NULL;
  if (GetArenaNoVirtual() == NULL && member_ != NULL) {
    delete member_;
  }
  member_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool ChangeMemberRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clb.ChangeMemberRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .clb.VirtualServerAddress server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .clb.MemberAddress member = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .clb.MemberConfig config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clb.ChangeMemberRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clb.ChangeMemberRequest)
  return false;
#undef DO_
}

void ChangeMemberRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clb.ChangeMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.VirtualServerAddress server = 1;
  if (this->has_server()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->server_, output);
  }

  // .clb.MemberAddress member = 2;
  if (this->has_member()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->member_, output);
  }

  // .clb.MemberConfig config = 3;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:clb.ChangeMemberRequest)
}

::google::protobuf::uint8* ChangeMemberRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:clb.ChangeMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .clb.VirtualServerAddress server = 1;
  if (this->has_server()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->server_, deterministic, target);
  }

  // .clb.MemberAddress member = 2;
  if (this->has_member()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->member_, deterministic, target);
  }

  // .clb.MemberConfig config = 3;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clb.ChangeMemberRequest)
  return target;
}

size_t ChangeMemberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clb.ChangeMemberRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .clb.VirtualServerAddress server = 1;
  if (this->has_server()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->server_);
  }

  // .clb.MemberAddress member = 2;
  if (this->has_member()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->member_);
  }

  // .clb.MemberConfig config = 3;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeMemberRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:clb.ChangeMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeMemberRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeMemberRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:clb.ChangeMemberRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:clb.ChangeMemberRequest)
    MergeFrom(*source);
  }
}

void ChangeMemberRequest::MergeFrom(const ChangeMemberRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:clb.ChangeMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server()) {
    mutable_server()->::clb::VirtualServerAddress::MergeFrom(from.server());
  }
  if (from.has_member()) {
    mutable_member()->::clb::MemberAddress::MergeFrom(from.member());
  }
  if (from.has_config()) {
    mutable_config()->::clb::MemberConfig::MergeFrom(from.config());
  }
}

void ChangeMemberRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:clb.ChangeMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeMemberRequest::CopyFrom(const ChangeMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clb.ChangeMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeMemberRequest::IsInitialized() const {
  return true;
}

void ChangeMemberRequest::Swap(ChangeMemberRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeMemberRequest::InternalSwap(ChangeMemberRequest* other) {
  using std::swap;
  swap(server_, other->server_);
  swap(member_, other->member_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeMemberRequest::GetMetadata() const {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Status::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Status::Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_netlink_2eproto::InitDefaultsStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:clb.Status)
}
Status::Status(const Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:clb.Status)
}

void Status::SharedCtor() {
  code_ = 0u;
  _cached_size_ = 0;
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:clb.Status)
  SharedDtor();
}

void Status::SharedDtor() {
}

void Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Status::descriptor() {
  ::protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Status& Status::default_instance() {
  ::protobuf_netlink_2eproto::InitDefaultsStatus();
  return *internal_default_instance();
}

Status* Status::New(::google::protobuf::Arena* arena) const {
  Status* n = new Status;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:clb.Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0u;
  _internal_metadata_.Clear();
}

bool Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:clb.Status)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:clb.Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:clb.Status)
  return false;
#undef DO_
}

void Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:clb.Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:clb.Status)
}

::google::protobuf::uint8* Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:clb.Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:clb.Status)
  return target;
}

size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:clb.Status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:clb.Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:clb.Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:clb.Status)
    MergeFrom(*source);
  }
}

void Status::MergeFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:clb.Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    set_code(from.code());
  }
}

void Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:clb.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clb.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {
  return true;
}

void Status::Swap(Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Status::InternalSwap(Status* other) {
  using std::swap;
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Status::GetMetadata() const {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_netlink_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Clb::~Clb() {}

const ::google::protobuf::ServiceDescriptor* Clb::descriptor() {
  protobuf_netlink_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_netlink_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* Clb::GetDescriptor() {
  return descriptor();
}

void Clb::CreateVirtualServer(::google::protobuf::RpcController* controller,
                         const ::clb::CreateVirtualServerRequest*,
                         ::clb::Status*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateVirtualServer() not implemented.");
  done->Run();
}

void Clb::UpdateVirtualServer(::google::protobuf::RpcController* controller,
                         const ::clb::UpdateVirtualServerRequest*,
                         ::clb::Status*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UpdateVirtualServer() not implemented.");
  done->Run();
}

void Clb::DeleteVirtualServer(::google::protobuf::RpcController* controller,
                         const ::clb::DeleteVirtualServerRequest*,
                         ::clb::Status*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DeleteVirtualServer() not implemented.");
  done->Run();
}

void Clb::AddMember(::google::protobuf::RpcController* controller,
                         const ::clb::AddMemberRequest*,
                         ::clb::Status*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddMember() not implemented.");
  done->Run();
}

void Clb::ChangeMember(::google::protobuf::RpcController* controller,
                         const ::clb::ChangeMemberRequest*,
                         ::clb::Status*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ChangeMember() not implemented.");
  done->Run();
}

void Clb::RemoveMember(::google::protobuf::RpcController* controller,
                         const ::clb::RemoveMemberRequest*,
                         ::clb::Status*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RemoveMember() not implemented.");
  done->Run();
}

void Clb::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_netlink_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      CreateVirtualServer(controller,
             ::google::protobuf::down_cast<const ::clb::CreateVirtualServerRequest*>(request),
             ::google::protobuf::down_cast< ::clb::Status*>(response),
             done);
      break;
    case 1:
      UpdateVirtualServer(controller,
             ::google::protobuf::down_cast<const ::clb::UpdateVirtualServerRequest*>(request),
             ::google::protobuf::down_cast< ::clb::Status*>(response),
             done);
      break;
    case 2:
      DeleteVirtualServer(controller,
             ::google::protobuf::down_cast<const ::clb::DeleteVirtualServerRequest*>(request),
             ::google::protobuf::down_cast< ::clb::Status*>(response),
             done);
      break;
    case 3:
      AddMember(controller,
             ::google::protobuf::down_cast<const ::clb::AddMemberRequest*>(request),
             ::google::protobuf::down_cast< ::clb::Status*>(response),
             done);
      break;
    case 4:
      ChangeMember(controller,
             ::google::protobuf::down_cast<const ::clb::ChangeMemberRequest*>(request),
             ::google::protobuf::down_cast< ::clb::Status*>(response),
             done);
      break;
    case 5:
      RemoveMember(controller,
             ::google::protobuf::down_cast<const ::clb::RemoveMemberRequest*>(request),
             ::google::protobuf::down_cast< ::clb::Status*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& Clb::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::clb::CreateVirtualServerRequest::default_instance();
    case 1:
      return ::clb::UpdateVirtualServerRequest::default_instance();
    case 2:
      return ::clb::DeleteVirtualServerRequest::default_instance();
    case 3:
      return ::clb::AddMemberRequest::default_instance();
    case 4:
      return ::clb::ChangeMemberRequest::default_instance();
    case 5:
      return ::clb::RemoveMemberRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& Clb::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::clb::Status::default_instance();
    case 1:
      return ::clb::Status::default_instance();
    case 2:
      return ::clb::Status::default_instance();
    case 3:
      return ::clb::Status::default_instance();
    case 4:
      return ::clb::Status::default_instance();
    case 5:
      return ::clb::Status::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

Clb_Stub::Clb_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
Clb_Stub::Clb_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
Clb_Stub::~Clb_Stub() {
  if (owns_channel_) delete channel_;
}

void Clb_Stub::CreateVirtualServer(::google::protobuf::RpcController* controller,
                              const ::clb::CreateVirtualServerRequest* request,
                              ::clb::Status* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void Clb_Stub::UpdateVirtualServer(::google::protobuf::RpcController* controller,
                              const ::clb::UpdateVirtualServerRequest* request,
                              ::clb::Status* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void Clb_Stub::DeleteVirtualServer(::google::protobuf::RpcController* controller,
                              const ::clb::DeleteVirtualServerRequest* request,
                              ::clb::Status* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void Clb_Stub::AddMember(::google::protobuf::RpcController* controller,
                              const ::clb::AddMemberRequest* request,
                              ::clb::Status* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void Clb_Stub::ChangeMember(::google::protobuf::RpcController* controller,
                              const ::clb::ChangeMemberRequest* request,
                              ::clb::Status* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void Clb_Stub::RemoveMember(::google::protobuf::RpcController* controller,
                              const ::clb::RemoveMemberRequest* request,
                              ::clb::Status* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace clb

// @@protoc_insertion_point(global_scope)
